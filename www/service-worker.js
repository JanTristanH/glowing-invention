const CACHE_NAME="harzer-wander-buddy-cache-v1";const APP_SHELL_FILES=["/","/index.html","/manifest.json","/service-worker.js","/images/BuddyWithMap.webp","/images/icons/BuddyWithMap-192.webp","/images/icons/BuddyWithMap-512.webp","/css/style.css","/js/app.js","/js/init.js","https://openui5.hana.ondemand.com/resources/sap-ui-core.js"].map(e=>e.startsWith("h")?e:"/frontendhwb/dist"+e);self.addEventListener("install",e=>{console.log("[Service Worker] Installing...");e.waitUntil(caches.open(CACHE_NAME).then(e=>{console.log("[Service Worker] Caching app shell...");return e.addAll(APP_SHELL_FILES)}));self.skipWaiting()});self.addEventListener("activate",e=>{console.log("[Service Worker] Activating...");e.waitUntil(caches.keys().then(e=>Promise.all(e.filter(e=>e!==CACHE_NAME).map(e=>{console.log("[Service Worker] Deleting old cache:",e);return caches.delete(e)}))));self.clients.claim()});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;e.respondWith(caches.match(e.request).then(t=>{if(t){console.log("[Service Worker] Serving from cache:",e.request.url);return t}console.log("[Service Worker] Fetching from network:",e.request.url);return fetch(e.request).then(t=>{if(!t||t.status!==200){return t}return caches.open(CACHE_NAME).then(r=>{r.put(e.request,t.clone());return t})})}).catch(()=>{console.log("[Service Worker] Network unavailable, showing fallback content.");return caches.match("/index.html")}))});
//# sourceMappingURL=service-worker.js.map