sap.ui.define(["hwb/frontendhwb/controller/BaseController","sap/m/MessageToast","sap/ui/core/Fragment","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,t,s,i,r){"use strict";return e.extend("hwb.frontendhwb.controller.Profile",{onInit:function(){e.prototype.onInit.apply(this,arguments);this.getRouter().getRoute("Profile").attachPatternMatched(this._onRouteMatched,this);if(!this.getModel("app").getProperty("/aSelectedGroupIds")){this.getModel("app").setProperty("/aSelectedGroupIds",[])}this.getModel("app").setProperty("/selectedFilterKeyProfile","all")},_onRouteMatched:function(e){this.getModel("app").setProperty("/backendUrl",window.location.origin);const t=e.getParameter("arguments").userId;this.sPath="/Users('"+t+"')";this.sUserID=t;this.getModel().invalidateEntityType("api.Stampboxes");this.getView().bindElement({path:this.sPath,events:{dataReceived:function(){this.updateTableFilters()}.bind(this)}});this.initAcceptButton();this.bindStampForMeSwitch();const s=new i("fromUser_ID",r.EQ,t);const n=this.byId("idFriendsListProfile").getBinding("items");n.filter([s]);this.getModel().refresh()},initAcceptButton:function(){var e=this.getModel("app");var t=e.getProperty("/currentUser/ID");if(!t){e.bindProperty("/currentUser/ID").attachChange(function(){var t=e.getProperty("/currentUser/ID");if(t){this._readPendingFriendshipRequests(t)}}.bind(this))}else{this._readPendingFriendshipRequests(t)}e.setProperty("/bHasPendingFriendshipRequests",false)},_readPendingFriendshipRequests:function(e){this.getModel().read("/PendingFriendshipRequests",{filters:[new i("fromUser_ID",r.EQ,e),new i("toUser_ID",r.EQ,this.sUserID)],parameters:{expand:"fromUser,toUser"},success:function(e){if(e.results.length>0){this.getModel("app").setProperty("/bHasPendingFriendshipRequests",true);this.getModel("app").setProperty("/sPendingFriendshipRequestID",e.results[0].ID)}}.bind(this)})},onFriendSelectionChange:function(e){const t=e.getParameter("listItem");const s=t.getBindingContext();t.setSelected(false);const i=s.getObject().toUser_ID;this.getRouter().navTo("Profile",{userId:i})},onAcceptPendingFriendshipRequest:function(e){const s=this.getView().getModel();const i=this.getModel("app").getProperty("/sPendingFriendshipRequestID");s.callFunction("/acceptPendingFriendshipRequest",{method:"POST",urlParameters:{FriendshipID:i},success:function(){this.initAcceptButton();this.getModel().refresh()}.bind(this),error:function(e){t.show(this.getText("error"));console.error("Error accepting friendship request:",e)}})},updateTableFilters:function(){const e=this.getModel("app").getProperty("/currentUser");const t=[e.ID,this.sUserID];let s=new i("groupFilterStampings",r.NE,[...new Set(t)].join(","));const n=this.byId("idStampingsProfileTable").getBinding("items");if(n){n.filter(t.length>1?s:null)}},onNameChange:function(e){this.submitChanges()},onDeleteProfileImage:function(e){this.getModel().setProperty(this.sPath+"/picture",null);this.submitChanges()},onUploadImageDialog:function(){if(this.sUserID!=this.getModel("app").getProperty("/currentUser/ID")){return}if(!this._oDialogImageUpload){this._pDialogImageUpload=s.load({id:this.getView().getId(),name:"hwb.frontendhwb.fragment.EditProfileImage",controller:this})}this._pDialogImageUpload.then(function(e){this._oDialogImageUpload=e;this.getView().addDependent(e);e.bindElement(this.sPath);e.open()}.bind(this))},onCloseImageUploadDialog:function(){this._oDialogImageUpload.close();this._clearFileUploader()},_clearFileUploader:function(){const e=this.byId("fileUploader");if(!!e){e.clear()}},onUploadComplete:function(e){this._oDialogImageUpload.setBusy(false);const s=e.getParameter("status");if(s!==204){t.show(this.getText("error"))}else{t.show(this.getText("uploadSuccess"));this.onCloseImageUploadDialog();this.submitChanges()}},onTypeMissmatch:function(){t.show(this.getText("fileTypeNotSupportedMessage"))},onUploadPress:function(e){const s=this.getView().byId("fileUploader");if(!s.getValue()){const e=this.getModel("i18n");t.show(e.getProperty("chooseAFileFirst"));return}this._oDialogImageUpload.setBusy(true);this.getModel().createEntry("/Attachments",{properties:{filename:s.getValue(),mimeType:s.getMimeType()},success:function(e){this.getModel("app").setProperty("/MediaID",e.ID);s.upload();const t=this.getModel("app").getProperty("/backendUrl")+"/odata/v2/api/Attachments/"+e.ID+"/content";this.getModel().setProperty(this.sPath+"/picture",t)}.bind(this),error:function(){this._oDialogImageUpload.setBusy(false);t.show(this.getText("error"))}.bind(this)});this.submitChanges()},submitChanges:function(){this.getModel().submitChanges({success:function(){t.show(this.getText("saved"));this.getModel("app").setProperty("/currentUser/picture",this.getModel().getProperty(this.sPath+"/picture"))}.bind(this),error:function(){t.show(this.getText("error"))}.bind(this)})},onStampNavigatePress:function(e){const t=e.getSource().data("ID");this.getRouter().navTo("MapWithPOI",{idPOI:t})},onStampingsTableUpdateFinished:function(e){let t=0;const s=e.getSource().getItems();for(let e=0;e<s.length;e++){if(s[e].getBindingContext().getProperty("stampedUserIds").includes(this.sUserID)){t++}}this.getModel("app").setProperty("/stampedCount",t)},onFormatSelectedForUser:function(e,t){if(!t){const e=this.getView().getBindingContext();t=e?.getProperty("ID")}if(!t||!Array.isArray(e)||e.length===0){return false}return e.includes(t)},onFormatAddToGroupVisible:function(){const e=this.getModel("app").getProperty("/aSelectedGroupIds");return!e.includes(this.sUserID)},onAddToGroupSelection:function(){this.oMyAvatar=this.byId("container-hwb.frontendhwb---Profile--idMyAvatar");this._oPopover.openBy(this.oMyAvatar);const e=this.byId("container-hwb.frontendhwb---Profile--idGroupsMultiComboBox");e.addSelectedKeys([this.sUserID])},onNavToFriendPress:function(e){const s=e.getSource().getBindingContext();if(!s){t.show("No friend context found.");return}const i=s.getObject().toUser_ID;this.getRouter().navTo("Profile",{userId:i})},onAddFriend:function(e){const s=e.getSource().getBindingContext();if(!s){t.show(this.getText("error"));return}var i=s.getObject();let r=this.getModel("app").getProperty("/currentUser");let n=r.ID;this.getModel().create("/Friendships",{fromUser:{ID:n},toUser:{ID:i.ID}},{success:function(e){this.getModel().refresh();t.show(this.getText("friendshipCreated"));this.getModel().refresh();this.byId("idIsAllowedToStampForFriendSwitch").bindProperty("state",{path:`/Friendships(guid'${e.ID}')/isAllowedToStampForFriend`})}.bind(this),error:function(e){t.show(this.getText("errorCreatingFriendship"));console.error("Error creating friendship:",e)}.bind(this)})},bindStampForMeSwitch:function(){const e=this.getModel("app").getProperty("/currentUser/ID");this.getModel().read("/Friendships",{filters:[new i("toUser_ID",r.EQ,this.sUserID),new i("fromUser_ID",r.EQ,e)],success:function(e){if(e.results.length>0){this.byId("idIsAllowedToStampForFriendSwitch").bindProperty("state",{path:`/Friendships(guid'${e.results[0].ID}')/isAllowedToStampForFriend`})}}.bind(this)})},onAllowedToStampSwitchChange:function(){this.getModel().submitChanges({success:()=>this.getModel().refresh()})},onFormatListItemVisible:function(e,t){const s=this.getModel("app").getProperty("/currentUser/ID");switch(e){case undefined:case"all":return true;case"stamped":return t.includes(this.sUserID);case"unstamped":return!t.includes(this.sUserID);case"stampedMe":return t.includes(s);case"unstampedMe":return!t.includes(s);case"stampedBoth":return t.includes(this.sUserID)&&t.includes(s);case"unstampedBoth":return!t.includes(this.sUserID)&&!t.includes(s);default:return false}}})});
//# sourceMappingURL=Profile.controller.js.map