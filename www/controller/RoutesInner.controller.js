sap.ui.define(["hwb/frontendhwb/controller/BaseController","sap/ui/model/json/JSONModel","sap/ui/core/mvc/XMLView","sap/f/library","sap/m/MessageToast","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(t,e,i,o,r,a,s){"use strict";var n;var l=o.LayoutType;return t.extend("hwb.frontendhwb.controller.RoutesInner",{itemCache:[],_oMap:{},onInit:function(){t.prototype.onInit.apply(this,arguments);this.initializeAppModelForMap();this.getView().setModel(new e,"local");this.oFlexibleColumnLayout=this.byId("fcl");this.getRouter().getRoute("Routes").attachPatternMatched(this.setList,this);this.getRouter().getRoute("RoutesDetailTransient").attachPatternMatched(this.onDetailRouteMatched,this);this.getRouter().getRoute("RoutesDetailEdit").attachPatternMatched(this.onDetailRouteEditMatched,this);this.getRouter().getRoute("RoutesDetail").attachPatternMatched(this.onDetailRoutePersistedMatched,this)},onAfterRendering:function(){this.getView().getModel().setSizeLimit(1e3);this.attachGroupChange()},attachGroupChange:function(){this.getModel("app").attachPropertyChange(t=>{if(t.getParameter("path")=="/aSelectedGroupIds"){let t=this.getModel("app").getProperty("/aSelectedGroupIds")||[];t=JSON.parse(JSON.stringify(t));let e=this.getModel("app").getProperty("/currentUser");t.push(e.ID);let i=new a("groupFilterStampings",s.NE,t.join(","));const o=this.byId("idTourList").getBinding("items");if(o){o.filter(t.length>1?i:null);o.attachDataReceived(t=>{const e=t.getParameter("data").results;let i=this.getView().getModel("local");e.forEach(t=>{let e=i.getProperty(`/Tours(${t.ID})`);if(e){e.AverageGroupStampings=t.AverageGroupStampings||0;e.path=this._addStampedUsers(e.path);i.setProperty(`/Tours(${t.ID})`,e)}})})}}})},onDetailRoutePersistedMatched:function(t){let e=this.getView().getModel();this.getModel("app").setProperty("/edit",false);let i=new Promise(function(t,i){e.read("/Stampboxes",{urlParameters:{$top:500},success:function(e){t(e)},error:function(t){i(t)}})});let o=new Promise(function(t,i){e.read("/ParkingSpots",{urlParameters:{$top:500},success:function(e){t(e)},error:function(t){i(t)}})});Promise.all([i,o]).then(function(){this.onDetailRouteEditMatchedInner(t)}.bind(this)).catch(function(t){console.error("Error reading Stampboxes or ParkingSpots:",t)})},onDetailRouteEditMatched:function(t){this.onDetailRoutePersistedMatched(t);this.getModel("app").setProperty("/edit",true);this._retryUpdateSplitter(0)},_retryUpdateSplitter:function(t){let e=sap.ui.getCore().byId("midView--idRoutesDetailSplitter");const i=10;const o=500;if(e){let r=e.getContentAreas();if(r&&r.length>=2){r[0].setLayoutData(new sap.ui.layout.SplitterLayoutData({size:"30%"}));r[1].setLayoutData(new sap.ui.layout.SplitterLayoutData({size:"70%"}));console.log("Splitter updated successfully!")}else if(t<i){console.warn(`Splitter update failed, retrying... Attempt: ${t+1}`);setTimeout(()=>this._retryUpdateSplitter(t+1),o*Math.pow(2,t))}else{console.error("Failed to update Splitter after multiple attempts.")}}else if(t<i){console.warn(`Splitter not found, retrying... Attempt: ${t+1}`);setTimeout(()=>this._retryUpdateSplitter(t+1),o*Math.pow(2,t))}else{console.error("Splitter not found after multiple attempts.")}},onDetailRouteEditMatchedInner:function(t){let e=this.getView().getModel("local");this.onDetailRouteMatched(t);var i=t.getParameter("arguments").TourId;if(i&&e.getProperty(`/Tours(${i})`)){this._showDetailViewForIdList(i)}else{this.getModel().read(`/Tours(guid'${i}')`,{success:function(t,o){if(t.path&&t.path.__deferred){this.loadTourTravelTime(i,function(i){t.path=i;e.setProperty(`/Tours(${t.ID})`,t);this._showDetailViewForIdList(t.ID)}.bind(this))}}.bind(this),error:function(t){r.show(this.getText("errorLoadingTour"));console.error(t)}.bind(this)})}this.getModel("local").setProperty("/sIdListTravelTimes",i)},onDetailRouteMatched:function(t){var e=t.getParameter("arguments");var i=e.idListTravelTimes;if(i){this._showDetailViewForIdList(i)}this.getModel("local").setProperty("/sIdListTravelTimes",i)},_showDetailViewForIdList:function(t){let e=this.getView().getModel("local");let i=e.getProperty(`/Tours(${t})`);if(!i){this.getModel().callFunction("/getTourByIdListTravelTimes",{method:"GET",urlParameters:{idListTravelTimes:t},success:function(i){i.getTourByIdListTravelTimes.path=i.getTourByIdListTravelTimes.path.map(t=>({id:t.ID,fromPoi:t.fromPoi,name:t.name,poi:t.toPoi,duration:t.durationSeconds,distance:t.distanceMeters,travelMode:t.travelMode,toPoiType:t.toPoiType,positionString:t.positionString,AverageGroupStampings:t.AverageGroupStampings||0}));e.setProperty(`/Tours(${t})`,i.getTourByIdListTravelTimes);this._showDetailViewForIdList(t)}.bind(this)})}else{e.setProperty("/oSelectedTour",i);e.setProperty("/oSelectedTour/path",this._mapTravelTimeToPOIList(i.path));e.setProperty("/wayPointScrollContainerHeight","400px");let t=this._getStartOfTour(i);e.setProperty("/centerPosition",t);this.setDetailPage(t);setTimeout(()=>{this.setDetailPage(t)},100)}},_getStartOfTour:function(t){let e=t.path[1]?.positionString;if(!Array.isArray(t.path)||!e){return this.fallBackCords}return e.split(";0")[0]},setList:function(){this.oFlexibleColumnLayout.setLayout(l.OneColumn);this.getModel("app").setProperty("/edit",false)},onOpenRoutingDialog:async function(){var t=this.getView();if(!this.pDialog){this.pDialog=await this.loadFragment({name:"hwb.frontendhwb.fragment.HikingRouteDialog"});this.pDialog.open();t.addDependent(this.pDialog);this.onAfterRenderingFragment();var i=new e({maxDepth:15,maxDuration:new Date(1*60*60*1e3),maxDistance:15,latitudeStart:"",longitudeStart:"",allowDriveInRoute:true,minStampCount:1});this.pDialog.setModel(i)}this.byId("idAutocompleteInput").setBusy(false);this.pDialog.open();this.onAfterRenderingFragment()},onCancel:function(){this.pDialog.close()},onSubmitRouting:function(){var t=this.getView().getModel();var e=this.pDialog.getModel();let i=this.getModel("app").getProperty("/aSelectedGroupIds")||[];i=JSON.parse(JSON.stringify(i));let o=this.getModel("app").getProperty("/currentUser");i.push(o.ID);var a="/calculateHikingRoute";var s={maxDepth:e.getProperty("/maxDepth"),maxDuration:e.getProperty("/maxDuration"),maxDistance:e.getProperty("/maxDistance")*1e3,latitudeStart:e.getProperty("/latitudeStart"),longitudeStart:e.getProperty("/longitudeStart"),allowDriveInRoute:e.getProperty("/allowDriveInRoute"),minStampCount:e.getProperty("/minStampCount"),groupFilterStampings:i.join(",")};s.maxDuration=Math.round(s.maxDuration.getTime()/1e3)+3600;t.callFunction(a,{method:"GET",urlParameters:s,success:function(t){this.byId("idIconTabBarMulti").setSelectedKey("iconTabFilterCalculatedRoutes");this.setDetailPage();let e=this.getView().getModel("local"),i=t.calculateHikingRoute.results,o=i[0];e.setProperty("/hikingRoutes",i);this._writeHikingRoutesAsToursToModel(i,e);this.pDialog.close();if(!!i.length){this.byId("idTourCalculateButton").setVisible(true);sap.m.MessageToast.show(this.getModel("i18n").getProperty("routeCalculatedSuccessfully"));this.getRouter().navTo("RoutesDetailTransient",{idListTravelTimes:o.id})}else{r.show(this.getText("noRoutesFound"))}}.bind(this),error:function(t){r.show(this.getText("someThingWentWrong"));this.pDialog.close()}.bind(this)})},_writeHikingRoutesAsToursToModel:function(t,e){for(let i of t){e.setProperty(`/Tours(${i.id})`,i)}},onToursListSelectionChange:function(t){let e=t.getParameter("listItem");e.setSelected(false);let i=e.getCustomData().find(t=>t.getKey()==="ID").getValue();this.getRouter().navTo("RoutesDetail",{TourId:i})},onSelectionChange:function(t){let e=t.getParameter("selectedItem").getKey();this.getRouter().navTo("RoutesDetailTransient",{idListTravelTimes:e})},setDetailPage:function(t){this._loadView({id:"midView",viewName:"hwb.frontendhwb.view.RoutesMap"}).then(function(e){let i=this.getView().getModel("local");e.setModel("local",i);this.oFlexibleColumnLayout.addMidColumnPage(e);this.oFlexibleColumnLayout.setLayout(l.TwoColumnsMidExpanded);this._oMap=sap.ui.getCore().byId("midView--RoutesMapId--map");if(this._oMap&&t){this._oMap.setCenterPosition(t)}else if(t){setTimeout(()=>{this.setDetailPage(t)},100)}}.bind(this))},_loadView:function(t){var e=this._mViews=this._mViews||Object.create(null);if(!e[t.id]){e[t.id]=this.getOwnerComponent().runAsOwner(function(){return i.create(t)})}return e[t.id]},onUseCurrentLocation:function(){this.byId("idAutocompleteInput").setBusy(true);this._geolocate()},onButtonCreateTourPress:function(t){var e={name:"Neue Tour",idListTravelTimes:""};this.getModel().create("/Tours",e,{success:function(t,e){this.getModel("local").setProperty(`/Tours(${t.ID})`,t);r.show(this.getText("tourSaved"));this.getModel("app").setProperty("/edit",true);this.getRouter().navTo("RoutesDetailEdit",{TourId:t.ID})}.bind(this),error:function(t){r.show(this.getText("error"));console.error(t)}})},onAfterRenderingFragment:function(){n=new google.maps.places.Autocomplete(this.byId("idAutocompleteInput").getDomRef("inner"),{types:["geocode"]});n.addListener("place_changed",function(){var t=n.getPlace();this.pDialog.getModel().setProperty("/latitudeStart",t.geometry.location.lat());this.pDialog.getModel().setProperty("/longitudeStart",t.geometry.location.lng())}.bind(this))},_geolocate:function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(t){this.byId("idAutocompleteInput").setBusy(false);var e={lat:t.coords.latitude,lng:t.coords.longitude};var i=new google.maps.Circle({center:e,radius:t.coords.accuracy});n.setBounds(i.getBounds());this.pDialog.getModel().setProperty("/latitudeStart",e.lat);this.pDialog.getModel().setProperty("/longitudeStart",e.lng);this.byId("idAutocompleteInput").setValue("Aktueller Standort üìç")}.bind(this))}}})});
//# sourceMappingURL=RoutesInner.controller.js.map